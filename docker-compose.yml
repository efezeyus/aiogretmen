version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: ./yapayzekaogretmen_python/backend
      dockerfile: Dockerfile
    container_name: aiogretmen-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
      - POSTGRES_HOST=postgres
    env_file:
      - ./yapayzekaogretmen_python/backend/.env
    depends_on:
      - mongodb
      - redis
      - elasticsearch
      - postgres
    volumes:
      - ./yapayzekaogretmen_python/backend:/app
      - backend-logs:/app/logs
    networks:
      - aiogretmen-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aiogretmen-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: aiogretmen-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=your-secure-password
      - MONGO_INITDB_DATABASE=aiogretmen_db
    volumes:
      - mongodb-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: aiogretmen-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=aiogretmen
      - POSTGRES_PASSWORD=your-secure-password
      - POSTGRES_DB=aiogretmen_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: aiogretmen-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass your-redis-password
    volumes:
      - redis-data:/data
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: aiogretmen-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: aiogretmen-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Celery Worker
  celery:
    build: 
      context: ./yapayzekaogretmen_python/backend
      dockerfile: Dockerfile
    container_name: aiogretmen-celery
    command: celery -A app.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - ./yapayzekaogretmen_python/backend/.env
    depends_on:
      - redis
      - mongodb
    volumes:
      - ./yapayzekaogretmen_python/backend:/app
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: 
      context: ./yapayzekaogretmen_python/backend
      dockerfile: Dockerfile
    container_name: aiogretmen-celery-beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - ./yapayzekaogretmen_python/backend/.env
    depends_on:
      - redis
    volumes:
      - ./yapayzekaogretmen_python/backend:/app
    networks:
      - aiogretmen-network
    restart: unless-stopped

  # Flower (Celery Monitoring)
  flower:
    image: mher/flower:2.0
    container_name: aiogretmen-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:your-flower-password
    depends_on:
      - redis
    networks:
      - aiogretmen-network
    restart: unless-stopped

volumes:
  mongodb-data:
  postgres-data:
  redis-data:
  elasticsearch-data:
  backend-logs:

networks:
  aiogretmen-network:
    driver: bridge